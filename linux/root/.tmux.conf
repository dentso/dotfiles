# https://github.com/adoyle-h/dotfiles/blob/master/configs/tmux.conf

# Add true color & italics support with alacritty terminal
set -g default-terminal "alacritty"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

## Clipboard
set -g set-clipboard on
set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',tmux-256color:RGB'
set -sg escape-time 0

# tmux auto-complete
bind-key C-Tab run -b 'tmux-autocomplete'

### Move Window
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
bind q killp

# Use m to toggle mouse mode
unbind m
bind m setw mouse
# set -g @yank_action 'copy-pipe'

# Use r to quickly reload tmux settings
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# don't rename windows automatically
# Use vim keybindings in copy mode
setw -g mode-keys vi
setw -g status-keys vi

###############################################################################

# detach and reattach panes
bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -s $.1
# cycle panes
bind-key C-n swap-pane -s :+.top \; rotate-window -Ut :+

###############################################################################
# panes

set -g automatic-rename-format '#{pane_current_path}'
setw -g pane-border-format ' [#{pane_index}] #{=/-20/…:pane_title} [#{=/-20/…:pane_current_command}] #(pgrep -P "#{pane_pid}" | tr "\n" " ")'
set -s command-alias[10] rename-pane='select-pane -T'
set -g pane-border-style 'fg=colour235,bg=colour238'
set -g pane-active-border-style 'fg=colour51,bg=colour236'
setw -g pane-border-status top


# neovim lsp-colors
# Undercurl
set -g default-terminal "screen-256color"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

#-------------------------------------------------------#
#Pane colours
#-------------------------------------------------------#

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Use shift + arrow key to move between windows in a session
bind -n S-Left  previous-window
bind -n S-Right next-window
# Move around panes with hjkl, as one would in vim after pressing ctrl + w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
bind a send-prefix

bind-key t set-option status

### Move Pane
bind -r C-up swap-pane -U
bind -r C-down swap-pane -D
bind C-o display-panes \; command-prompt -p "Goto pane:" "select-pane -t '%%'"
bind -r o select-pane -t :.+
bind -r O select-pane -t :.-
bind '}' choose-buffer

###############################################################################

set -g base-index 1           # start windows numbering at 1
set -g pane-base-index 1     # make pane numbering consistent with windows
# setw -g utf8 on

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title
set -g set-titles-string '#H:#S.#I.#P #W #T'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 5     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity on

###############################################################################

# Improve colors
# set -ga terminal-overrides ",xterm-256color:RGB"

# Set scrollback buffer to 10000
set -g history-limit 10000

# Customize the status line
# set -g status-fg  green
# set -g status-bg  black

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\S+\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}'   | grep -iqE '^[^TXZ ]+ +(\S+\/)?fzf$'"

bind -n C-h run "( && tmux send-keys C-h) ||                           tmux select-pane -L"

bind -n C-j run "( && tmux send-keys C-j)  ||                          ( && tmux send-keys C-j) ||                          tmux select-pane -D"

bind -n C-k run "( && tmux send-keys C-k) ||                           ( && tmux send-keys C-k)  ||                           tmux select-pane -U"

bind -n C-l run  "( && tmux send-keys C-l) ||                           tmux select-pane -R"

###############################################################################

# Quickly view network traffic
bind-key n split-window -h "nettop"
# Quickly edit todo list
bind-key t split-window -h "doc todo"

###############################################################################
# Copy/Paste

# Use v to trigger selection
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

###############################################################################
# extrakto
set -g @extrakto_key "Tab"
set -g @extrakto_split_size "15"
set -g @extrakto_clip_tool "xsel --input --clipboard" # works better for nvim
set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
set -g @extrakto_insert_key "enter"  # use enter to insert selection


###############################################################################
# prefix-highlight
# set -g @prefix_highlight_prefix_prompt 'Wait'
# set -g @prefix_highlight_copy_prompt 'Copy'
# set -g @prefix_highlight_sync_prompt 'Sync'

###############################################################################
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-strategy-nvim 'session'

set -g @continuum-restore 'on'
set -g @continuum-save-interval '30'
set -g @continuum-boot 'on'

set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @scroll-speed-num-lines-per-scroll '2'
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

set -g @plugin 'egel/tmux-gruvbox'
set -g @tmux-gruvbox 'light'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# set -g @plugin 'seebi/tmux-colors-solarized'

if "test ! -d ~/.tmux/plugins/tpm"    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# run-shell ~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux
